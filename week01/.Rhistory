1 + 3
1 + 3
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
12.2  + 13.5
12. 2  + 13.5
12.2  + 13.5
12.2     +         13.5
5 - 10
4 * 30
40 / 3
4 ** 8
4 * * 8
4 ** 8
4 ^ 8
7 %% 2
7 %/% 2
(100 * 2) + 50 / (9 %%4)
age <- 30
(100 * 2) + 50 / (9 %%4)
age <- 30
age < - 30
age <- 30
age = 30
age <- 30
age = 30
age + 100
age <- 100
height + 50
height <- 180
height <- 180
height <- 180
height + 50
name <- "Mike"
height <- 180
name <- "Mike"
Mike
'Mike'
'Mike'
'Mike'
'Mike'
Mike
a <- 50
b <- 30
kor.score <- 50
source('~/.active-rstudio-document', echo=TRUE)
eng.score <- 100
1kor <- 90
k1or <- 90
kor1 <- 90
kor_score <- 100
kor score <- 100
kor_score <- 100
kor.score <- 100
my.name.is <- "Mike"
kor.score - 50
kor.score <- kor.score - 30
class(my.name.is)
class(kor.score)
happy
happy
happy <- "Hello"
source('~/.active-rstudio-document', echo=TRUE)
happy
happy <- 'Hello'
c <- 'bye"
happy
c <- 'bye'
c <- 'bye'
setwd("~/GitHub/radsp/week01")
n <- 2.2
i <- 5
t <- TRUE
f <- FALSE
t1 <- T
f2 <- F
char <- "Hello World!"
c <- 'Single Quote Char'
class(t)
class(f)
class(char)
class(n)
class(i)
# 데이터 타입 확인법 2 : 물어보는 방법
is.numeric(char)
is.numeric(i)
is.integer(n)
is.integer(i)
i2 <- 5L
i
i2
is.integer(i)
is.integer(i2)
is.double(i)
is.double(i2)
is.double(n)
a <- 11
a <- 11
b <- 7
Area <- a * b
Area
Area <- a * b
Area
Area
Area
Perimeter <- 2 * ( a + b)
Perimeter
a <- 20
b <- 10
Area <- a * b
Perimeter <- 2 * ( a + b)
x <- 7
x / 2
x %% 2
x <- 6
x %% 2
a <- 20
area <- 6*a**2
area
volume <- a^3
volume
# 4.
KMH <- 90
MPH <- 0.6214 * KMH
MPH
# 4.
KMH <- 100
MPH
MPH <- 0.6214 * KMH
MPH
student.1 <- 100
student.2 <- 90
student.1
n2 <- 2
nvec <- c(1,2,3,4,5)
class(nvec)
cvec <- c('K', 'O', 'R', "E", 'A')
cvec
class(cvec)
lvec <- c(TRUE, FALSE, FALSE)
lvec
class(lvec)
v <- c(FALSE, 2)
v
class(v)
v <- c('A', 10)
v
class(v)
pi
pi
pi
temps <- c(19, 21, 23, 24, 18,22,25)
temps
# vector names
names(temps) <- c('Mon', 'Tue', 'Wed', 'Thu','Fri',
'Sat', 'Sun')
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
temps[1]
temps
temps[2]
temps['Fri']
my.first <- c(3, 45, 56, 73)
my.first
is.numeric(my.first)
is.integer(my.first)
is.double(my.first)
v2 <- c(3L, 12L, 243L, 0L)
is.numeric(v2)
is.integer(v2)
is.double(v2)
v <- 1:30
v
v2 <- seq(1, 30)
v2
seq(30)
v3 <- seq(30)
v3
v4 <- 5:25
v4
v5 <- seq(5, 25)
v5
# seq함수는, step 을 넣을 수 있다.\
seq(5, 25, 5)
# 복사
rep(3, 10)
# 복사
rep(3, 100)
my.first
rm(v2)
v2
v2
my.frist
my.first
my.first[1]
my.first[-1]
my.frist
my.first
my.first[-1]
my.first <- my.first[-1]
my.first
v1 <- c(1,2,3)
v2 <- 5:7
v3 <- 11:14
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
v1
v1 + 3
v1 * 3
v1 + v2
v2 <- 5:7
v3 <- 11:14
v1 + v2
v1 + v3
length(v1)
length(v3)
v1 * v2
sum(v1)
sd(v1)
var(v1)
max(v1)
min(v1)
5 > 6
5 > 6
6 > 5
v1 <- 1:3
v2 <- c(10,20,30)
v1 < v2
v1 <- c(20, 10, 30)
v1 < v2
v1 != v2
x <- 100
x == 100
v1 == 30
v1 == 40
v1
v1 <- 1:100
v1
v1[35]
v1[35]
# 35번째 데이터를 , 100으로 바꾸세요.
v1[35] <- 100
source('~/GitHub/radsp/week01/vector.R', encoding = 'UTF-8', echo=TRUE)
v1[35]
v1
v1[ c(40, 45) ]
v1[ 40 ]
v1[ c(40,45) ]
v1[ c(5,7,10) ]
v1[ c(35,40) ]
v1[ 20:40  ]
v1 > 70
filter <- v1 > 70
v1[ filter ]
# 1. 2의 5승을 구하세요.
2**5
2^5
stock.prices <- c(23,27,23,21,34)
stock.prices
names(stock.prices) <- c('Mon','Tues','Wed','Thu','Fri')
stock.prices
sum(stock.prices)
sum(stock.prices) / length(stock.prices)
mean(stock.prices)
over.23 <- stock.prices > 23
over.23
stock.prices[ stock.prices > 23 ]
stock.prices[ over.23 ]
max(stock.prices)
stock.prices == max(stock.prices)
filter <- stock.prices == max(stock.prices)
stock.prices[ filter ]
#Data
# 2019년 1월 부터 12월까지의 수입과 지출 데이터 입니다.
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
profit <-  revenue - expenses
profit
profit
profit
tax <- profit * 0.3
tax
?round
round(tax, 2)
round(tax, digits = 2)
round(tax, digits = 2)
round(tax, digits = 2)
tax <- round(tax, digits = 2)
tax
# 이제 월별 세후 수익을 구하세요.
profit.after.tax <- profit - tax
profit.after.tax
# 각 월별, 비용대비 세후수익이 얼마인지 계산하세요.
# 퍼센트로 나오도록, 100을 곱하세요.
profit.margiin <-  profit.after.tax / revenue * 100
profit.margiin
profit.margiin <- round(profit.margiin, 2)
profit.margiin
# 2019년도 세후 수익은 얼마인지 평균을 구하세요.
mean(profit.after.tax)
